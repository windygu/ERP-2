@{
    ViewBag.Title = "自营出口明细查询";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using ERP.Models.CustomEnums
@using ERP.Models.CustomEnums.PageElementsPrivileges

@model ERP.Models.Order.VMOrderSearch

<link href="@Url.Content("~/Content/themes/icon.css")" rel="stylesheet" />

<div class="content-wrapper">
    <div align="right">
        <form class="form-inline frmFind" role="form" method="get">
            <div class="search_Condition box_1k">
                <ul>
                    <li>
                        <label class="col-xs-2">销售核算单号：</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.OrderNumber, new { @class = "form-control" })
                        </div>
                    </li>
                    <li>
                        <label class="col-xs-2">客户下单日期：</label>
                        <div class="col-sm-10">
                            <div class="col-xs-5" style="padding: 0;">
                                @Html.TextBoxFor(d => d.CustomerDateStart, new { @class = "form-control Wdate" })
                            </div>
                            <span class="col-xs-1" style="padding: 0;">-</span>
                            <div class="col-xs-5" style="padding: 0;">
                                @Html.TextBoxFor(d => d.CustomerDateEnd, new { @class = "form-control Wdate" })
                            </div>
                        </div>
                    </li>
                    <li>
                        <label class="col-xs-2">客户：</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.CustomerCode, new { @class = "form-control" })
                        </div>
                    </li>
                    <li>
                        <label class="col-xs-2">@ERP.Tools.Keys.CustomerPO：</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.POID, new { @class = "form-control" })
                        </div>
                    </li>
                    <li>
                        <label class="col-xs-2">工厂：</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.FactoryAbbreviation, new { @class = "form-control" })
                        </div>
                    </li>
                    <li>
                        <label class="col-xs-2">采购合同编号：</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.PurchaseNumber, new { @class = "form-control" })
                        </div>
                    </li>
                    <li>
                        <label class="col-xs-2">货号：</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.No, new { @class = "form-control" })
                        </div>
                    </li>
                    <li>
                        <label class="col-xs-2">出口发票号：</label>
                        <div class="col-sm-10">
                            @Html.TextBoxFor(d => d.InvoiceNo, new { @class = "form-control" })
                        </div>
                    </li>
                    <li class="search">
                        <button type="submit" class="btn btn-info" onclick="return OA.s(this)">查询</button>
                        <button type="button" class="btn btn-info" onclick="clearAll(this)">清空所有</button>
                    </li>
                </ul>
            </div>
        </form>
    </div>

    <div class="Control">
        @if ((Model.PageElementPrivileges & (int)FinanceElementPrivileges.Export_SelfExportList) > 0)
        {
            <button id="btn_Export" href="#" class="btn btn-default" onclick="ActionSelected()" type="button">导出Excel</button>
        }
    </div>

    <div class="box_1k" style="width:100%;overflow:auto">
        <table id="MyGrid" class="easyui-datagrid" data-options="singleSelect:false,pageList: [10,50,200,500,1000], pageSize:50,remoteSort:true,multiSort:true,pagination:true,url:'@Url.Content("~/Finance/GetAll_ForOther")?PageType=@((int)Model.PageType)&@Request.QueryString',method:'get',onLoadSuccess:onLoadSuccess,onHeaderContextMenu:onHeaderContextMenu,@(ERP.Tools.Keys.EasyUiDataGridSetting)">
            <thead data-options="frozen:true">
                <tr>
                    <th data-options="field:'ck',checkbox:true"></th>
                    <!--隐藏列-->
                    <th data-options="field:'ID',width:80,align:'center',hidden:true"></th>
                    <th data-options="field:'OrderProductID',width:80,align:'center',hidden:true"></th>
                    <th data-options="field:'CurrencySign',width:100,align:'center',hidden:true"></th>
                    <th data-options="field:'ProductID',width:80,align:'center',hidden:true"></th>
                    <th data-options="field:'Image',width:80,align:'center',hidden:true"></th>

                    <th data-options="field:'OrderNumber',width:100,align:'center'">核算表编号</th>
                    <th data-options="field:'CustomerCode',width:80,align:'center'">客户代号</th>
                    <th data-options="field:'BuyersAbbreviation',width:100,align:'center'">买手简称</th>
                    <th data-options="field:'POID',width:80,align:'center'">PO号码</th>
                </tr>
            </thead>
            <thead>
                <tr>

                    <th data-options="field:'ShippingDateFormatter',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("ShippingDateFormatter") ? "false" : "true")">实际船期</th>
                    <th data-options="field:'CustomerCode',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CustomerCode") ? "false" : "true")">客户代号</th>
                    <th data-options="field:'Qty',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("Qty") ? "false" : "true")">数量</th>
                    <th data-options="field:'InvoicedAmount',width:100,align:'center',editor:{type:'numberbox',options:{precision:2}},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InvoicedAmount") ? "false" : "true"),formatter:formatPriceWithCurrency">实际开票金额</th>
                    <th data-options="field:'CertifiedInvoiceDateFormatter',width:100,align:'center',editor:{type:'datebox',options:{formatter:myformatter,parser:myparser}},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CertifiedInvoiceDateFormatter") ? "false" : "true")">发票认证日期</th>
                    <th data-options="field:'ClearanceDateFormatter',width:100,align:'center',editor:{type:'datebox',options:{formatter:myformatter,parser:myparser}},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("ClearanceDateFormatter") ? "false" : "true")">结汇日期</th>
                    <th data-options="field:'ClearanceAmount',width:100,align:'center',editor:{type:'numberbox',options:{precision:2}},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("ClearanceAmount") ? "false" : "true")">结汇金额($)</th>
                    <th data-options="field:'InvoiceNo',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InvoiceNo") ? "false" : "true")">出口发票号</th>
                    <th data-options="field:'CustomsNumber',width:100,align:'center',editor:{type:'validatebox'},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CustomsNumber") ? "false" : "true")">报关单号</th>
                    <th data-options="field:'CustomsAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CustomsAmount") ? "false" : "true")">报关金额($)</th>
                    <th data-options="field:'HSCode',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("HSCode") ? "false" : "true")">报关编码</th>
                    <th data-options="field:'HSCodeName',width:120,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("HSCodeName") ? "false" : "true")">报关品名</th>
                    <!--6-->
                    <th data-options="field:'PreRecordedStatus',width:100,editor:'text',editor:{
                                type:'combobox',
                                options:{
                                    valueField:'Value',
                                    textField:'Text',
                                    data:[{'Selected':false,'Text':'&nbsp;','Value':'0'},{'Selected':false,'Text':'是','Value':'1'},{'Selected':false,'Text':'否','Value':'2'}],
                                    required:true,
                                    editable:false,
                                }
                            },formatter:formatPreRecordedStatus,hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PreRecordedStatus") ? "false" : "true")">预录单状态</th>
                    <th data-options="field:'DocumentIndexUpLoadDate',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("DocumentIndexUpLoadDate") ? "false" : "true")">单证索引上传日期</th>
                    <th data-options="field:'RefundRate',width:100,align:'center',editor:{type:'numberbox',options:{precision:2}},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("RefundRate") ? "false" : "true")">退税率(%)</th>
                    <th data-options="field:'RefundAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("RefundAmount") ? "false" : "true")">退税金额(￥)</th>
                    <th data-options="field:'Comment',width:100,align:'center',editor:{type:'validatebox'},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("Comment") ? "false" : "true")">备注</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<script>
    function onLoadSuccess() {
        jav.initGridCellTooltips(["ID"]);
        InitPopover();
    }
</script>

<script>
    var tableName = "#MyGrid";

    function operationFormatter(val, row, index) {
        var rows = $(tableName).datagrid('getRows');
        var row = rows[index];

        var showView = @(Model.PageElementPrivileges & (int)FinanceElementPrivileges.View_ForFactory);

        var ops = "";

        if (showView > 0) {
            ops += "<a wintype='idialog' winsize='1200,800,yes' class='btn btn-default btn-xs w_auto' onclick='return OA.i(this)' href='@(Url.Content("~/Finance/Edit_ForFactory/"))" + val + "' style='margin: 0 5px;'>查看</a>";
        }

        return ops;
    }

    function ActionSelected() {
        var idArray = getSelections(tableName, "OrderProductID");
        if (idArray.length <= 0) {
            $.messager.alert("提示","请选中信息！");
            return;
        }
        loading();
        $.post("@Url.Content("~/Finance/ExportExcel_SelfExportList")", { idList:  idArray.join(',') },
            function (result) {
                completeLoading();
                window.open(result, "_blank");
            }, "json");
    }
    
    function formatPriceWithCurrency(value,row,index){
        if (value == "" || value == null) {
            return null;
        }
        return row.CurrencySign + value;
    }

    function productNoFormatter(val, row, index) {
        if (row.ProductID == -1) {
            return "";
        }
        return jav.GetProductHtml(row.Image, '@(Url.Content("~/Product/Details/"))' + row.ProductID, row.No);
    }

    function onHeaderContextMenu(e, field){
        e.preventDefault();
        jav.initGridColumnVisibilityMenus("MyGrid", @(ERP.WebNew.Service.CurrentUserServices.Me.UserID), @((int)ERP.Models.CustomEnums.DatagridCustomColumnVisibilityModules.FinanceManagement_SelfExportList), e.pageX, e.pageY, @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ColumnsVisible))));
    }

    function myformatter(date){
        var y = date.getFullYear();
        var m = date.getMonth()+1;
        var d = date.getDate();
        return y+'-'+(m<10?('0'+m):m)+'-'+(d<10?('0'+d):d);
    }

    function myparser(s){
        if (!s) return new Date();
        var ss = (s.split('-'));
        var y = parseInt(ss[0],10);
        var m = parseInt(ss[1],10);
        var d = parseInt(ss[2],10);
        if (!isNaN(y) && !isNaN(m) && !isNaN(d)){
            return new Date(y,m-1,d);
        } else {
            return new Date();
        }
    }

    function formatPriceFactory(value,row,index){
        return row.CurrencySign + row.PriceFactory;
    }

    function formatPreRecordedStatus(value,row,index){

        var temp = @((int)PreRecordedStatusEnum.Yes);
        if (value==0) {
            return "&nbsp;";
        }
        else if (value==temp) {
            return "是";
        }
        else {
            return "否";
        }
    }
</script>