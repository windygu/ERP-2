@{
    ViewBag.Title = ViewBag.Title;
    Layout = "~/Views/Shared/_LayoutPop.cshtml";
}

@using ERP.Models.CustomEnums
@model ERP.Models.Order.VMOrderEdit

@section styles{

    <link href="@Url.Content("~/Content/themes/icon.css")" rel="stylesheet" />
    <style type="text/css">
        .glyphicon {
            right: 20px;
        }

        .box_1k {
            margin-top: 0;
        }

        .table-advance thead tr th {
            background: #666;
            color: #fff;
        }

        .bg_contact {
            height: 600px;
        }

        .bg_fff {
            height: 850px;
        }

        #ContactInformation .modal-header {
            border-bottom: none;
        }

        .datagrid-row-selected {
            color: #000;
        }

        .datagrid-header-check input, .datagrid-cell-check input {
            margin-bottom: 20px;
        }

        .validatebox-invalid {
            border-color: red !important;
            background-color: #ffa8a8 !important;
        }
    </style>
}

@using (Ajax.BeginForm("Edit", "Order", null, new AjaxOptions() { HttpMethod = "Post" }, new { id = "frmEdit" }))
{
    @Html.HiddenFor(d => d.OrderID)
    @Html.HiddenFor(d => d.PageType)
    @Html.HiddenFor(d => d.Finance_StatusID)
    @Html.HiddenFor(d => d.QuotID)

    <input id="SelectCustomer" type="hidden" />
    <input id="Commission" type="hidden" />
    <input id="Agent" type="hidden" />
    <input id="Allowance" type="hidden" />

    <h3 class="popTitle">
        销售订单信息
        <a class="table_toggle fa fa-2 fa-chevron-up"></a>
    </h3>

    <div class="row popContent" style="overflow: inherit;">

        <div class="form-group col-sm-6 has-feedback">
            <label class="col-sm-4 control-label">销售核算单号：</label>
            <div class="col-sm-8 control-label">
                @Model.OrderNumber
            </div>
        </div>
        <div class="form-group col-sm-6 has-feedback">
            <label class="col-sm-4 control-label text-danger">客户：</label>
            <div class="col-sm-8 control-label">
                @Model.CustomerNo
            </div>
        </div>
        <div class="form-group col-sm-6 has-feedback">
            <label class="col-sm-4 control-label text-danger">客户下单日期：</label>
            <div class="col-sm-8 control-label">
                @Model.CustomerDate
            </div>
        </div>
        <div class="form-group col-sm-6 has-feedback">
            <label class="col-sm-4 control-label text-danger">客户要求船期：</label>
            <div class="col-sm-8 control-label">
                @(Model.OrderDateStart + " ~ " + Model.OrderDateEnd)
            </div>
        </div>
        <div class="form-group col-sm-6 has-feedback">
            <label class="col-sm-4 control-label text-danger">@ERP.Tools.Keys.CustomerPO：</label>
            <div class="col-sm-8 control-label">
                @Model.POID
            </div>
        </div>
        <div class="form-group col-sm-6 has-feedback">
            <label class="col-sm-4 control-label text-danger">订单总金额：</label>
            <div class="col-sm-8 control-label">
                @Model.OrderAmount
            </div>
        </div>
    </div>

    <h3 class="popTitle">
        产品信息
        <a class="table_toggle fa fa-2 fa-chevron-up"></a>
    </h3>
    <div class="popContent select_table row chanpin">

        <div class="table-responsive">

            <table id="MyPopGrid" class="easyui-datagrid" style="width:100%;overflow:auto;">
                <thead data-options="frozen:true">
                    <tr>
                        <!--隐藏列-->
                        <th data-options="field:'ID',width:80,align:'center',hidden:true"></th>
                        <th data-options="field:'OrderProductID',width:80,align:'center',hidden:true"></th>
                        <th data-options="field:'CurrencySign',width:100,align:'center',hidden:true"></th>
                        <th data-options="field:'ProductID',width:80,align:'center',hidden:true"></th>
                        <th data-options="field:'Image',width:80,align:'center',hidden:true"></th>
                        <th data-options="field:'IsMaintain',width:80,align:'center',hidden:true"></th>

                        <th data-options="field:'FactoryAbbreviation',width:80,align:'center'">工厂</th>
                        <th data-options="field:'PurchaseNumber',width:80,align:'center'">采购合同号</th>
                        <th data-options="field:'PurchaseDateFormatter',width:80,align:'center'">采购合同日期</th>
                        <th data-options="field:'DateStartFormatter',width:80,align:'center'">要求交货期</th>
                        <th data-options="field:'No',width:100,align:'left',formatter:productNoFormatter">货号</th>
                    </tr>
                </thead>
                <thead>
                    <tr>
                        @{
                            string str_Date = "";
                            string str_Number = "";
                            string str_String = "";

                            string str2_Date = "";
                            string str2_Number = "";

                            if (ViewBag.IsFinancialOfficer)
                            {
                                str_Date = ",editor:{type:'datebox',options:{formatter:myformatter,parser:myparser}}";
                                str_Number = ",editor:{type:'numberbox',options:{precision:2}}";
                                str_String = ",editor:{type:'validatebox'}";
                            }
                            if (ViewBag.IsBusiness)
                            {
                                str2_Date = ",editor:{type:'datebox',options:{formatter:myformatter,parser:myparser}}";
                                str2_Number = ",editor:{type:'numberbox',options:{precision:2}}";
                            }
                        }
                        <!--1-->
                        <th data-options="field:'ShippingDateFormatter',width:100,align:'center'@(str2_Date),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("ShippingDateFormatter") ? "false" : "true")">实际船期</th>
                        <th data-options="field:'FactoryDateFormatter',width:100,align:'center'@(str2_Date),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("FactoryDateFormatter") ? "false" : "true")">实际工厂交货期</th>
                        <th data-options="field:'SeasonName',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("SeasonName") ? "false" : "true")">季节</th>
                        <th data-options="field:'Name',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("Name") ? "false" : "true")">品名</th>
                        <th data-options="field:'Qty',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("Qty") ? "false" : "true")">数量</th>
                        <th data-options="field:'PriceFactory',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PriceFactory") ? "false" : "true"),formatter:formatPriceWithCurrency">工厂价格</th>
                        <th data-options="field:'AllAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("AllAmount") ? "false" : "true"),formatter:formatPriceWithCurrency">采购合同金额</th>
                        <!--2-->
                        <th data-options="field:'SettlementPeriod',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("SettlementPeriod") ? "false" : "true")">结算期</th>
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <th data-options="field:'InvoicedAmount',width:100,align:'center'@(str_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InvoicedAmount") ? "false" : "true"),formatter:formatPriceWithCurrency">实际开票金额</th>
                        }
                        <th data-options="field:'PaymentDateFormatter',width:100,align:'center'@(str_Date),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PaymentDateFormatter") ? "false" : "true")">付款日</th>
                        <th data-options="field:'PaymentAmount',width:100,align:'center'@(str_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PaymentAmount") ? "false" : "true"),formatter:formatPriceWithCurrency">付款金额</th>
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <th data-options="field:'CertifiedInvoiceDateFormatter',width:100,align:'center'@(str_Date),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CertifiedInvoiceDateFormatter") ? "false" : "true")">发票认证日期</th>
                        }
                        <!--3-->
                        <th data-options="field:'POPrice',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("POPrice") ? "false" : "true")">PO单价($)</th>
                        <th data-options="field:'POAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("POAmount") ? "false" : "true")">PO金额($)</th>
                        <th data-options="field:'CommissionPercent',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CommissionPercent") ? "false" : "true")">佣金比例(%)</th>
                        <th data-options="field:'CommissionAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CommissionAmount") ? "false" : "true")">佣金金额($)</th>
                        <th data-options="field:'FOBUSDAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("FOBUSDAmount") ? "false" : "true")">FOB净值美元</th>
                        <th data-options="field:'USDExchangeRate',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("USDExchangeRate") ? "false" : "true")">美元汇率</th>
                        <th data-options="field:'FOBRMBAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("FOBRMBAmount") ? "false" : "true")">FOB净值人民币</th>
                        <!--4-->
                        <th data-options="field:'ClearanceDateFormatter',width:100,align:'center'@(str2_Date),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("ClearanceDateFormatter") ? "false" : "true")">结汇日期</th>
                        <th data-options="field:'ClearanceAmount',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("ClearanceAmount") ? "false" : "true")">结汇金额($)</th>
                        <th data-options="field:'BankFees',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("BankFees") ? "false" : "true")">银行费用($)</th>
                        <!--5-->
                        <th data-options="field:'InvoiceNo',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InvoiceNo") ? "false" : "true")">出口发票号</th>
                        <th data-options="field:'CustomsNumber',width:100,align:'center'@(str_String),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CustomsNumber") ? "false" : "true")">报关单号</th>
                        <th data-options="field:'CustomsAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CustomsAmount") ? "false" : "true")">报关金额($)</th>
                        <th data-options="field:'HSCode',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("HSCode") ? "false" : "true")">报关编码</th>
                        <th data-options="field:'HSCodeName',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("HSCodeName") ? "false" : "true")">报关品名</th>
                        <!--6-->
                        @if (ViewBag.IsBusiness)
                        {
                            <th data-options="field:'PreRecordedStatus',width:100,editor:'text',editor:{
                                type:'combobox',
                                options:{
                                    valueField:'Value',
                                    textField:'Text',
                                    data:[{'Selected':false,'Text':'&nbsp;','Value':'0'},{'Selected':false,'Text':'是','Value':'1'},{'Selected':false,'Text':'否','Value':'2'}],
                                    required:true,
                                    editable:false,
                                }
                            },formatter:formatPreRecordedStatus,hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PreRecordedStatus") ? "false" : "true")">预录单状态</th>

                        }
                        else
                        {
                            <th data-options="field:'PreRecordedStatus',width:100,formatter:formatPreRecordedStatus,hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PreRecordedStatus") ? "false" : "true")">预录单状态</th>
                        }
                        <th data-options="field:'DocumentIndexUpLoadDate',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("DocumentIndexUpLoadDate") ? "false" : "true")">单证索引上传日期</th>
                        <th data-options="field:'VolumeCUFT',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("VolumeCUFT") ? "false" : "true")">立方数(cuft)</th>
                        <!--7 工厂-->
                        <th data-options="field:'AllOutContractAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("AllOutContractAmount") ? "false" : "true")">代印及快递费(￥)</th>
                        <th data-options="field:'InspectionAuditFee_ForFactory',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionAuditFee_ForFactory") ? "false" : "true")">验厂费(￥)</th>
                        <th data-options="field:'InspectionSamplingFee_ForFactory',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionSamplingFee_ForFactory") ? "false" : "true")">重抽检费(￥)</th>
                        <th data-options="field:'InspectionVerificationFee_ForFactory',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionVerificationFee_ForFactory") ? "false" : "true")">重验货费(￥)</th>
                        <th data-options="field:'InspectionDetectFee_ForFactory',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionDetectFee_ForFactory") ? "false" : "true")">重检测费(￥)</th>
                        <th data-options="field:'RegisterFees',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("RegisterFees") ? "false" : "true")">拖柜费(￥)</th>
                        <!--8-->
                        <th data-options="field:'OtherExpensesDeduction',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("OtherExpensesDeduction") ? "false" : "true")">其他应扣费用(￥)</th>
                        <th data-options="field:'AllAmount_Factory',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("AllAmount_Factory") ? "false" : "true")">合计应扣工厂费用(￥)</th>
                        <th data-options="field:'FactoryFees',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("FactoryFees") ? "false" : "true")">应补工厂费用(￥)</th>
                        <th data-options="field:'PacksDetectFees',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PacksDetectFees") ? "false" : "true")">包装检测费(￥)</th>
                        <!--9 我司-->
                        <th data-options="field:'InspectionAuditFee',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionAuditFee") ? "false" : "true")">验厂费(￥)</th>
                        <th data-options="field:'InspectionSamplingFee',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionSamplingFee") ? "false" : "true")">抽检费(￥)</th>
                        <th data-options="field:'InspectionVerificationFee',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionVerificationFee") ? "false" : "true")">验货费(￥)</th>
                        <th data-options="field:'InspectionDetectFee',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InspectionDetectFee") ? "false" : "true")">检测费(￥)</th>
                        <!--10-->
                        <th data-options="field:'PortCharges',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("PortCharges") ? "false" : "true")">港杂费(￥)</th>
                        <th data-options="field:'InternationalCourierFees',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("InternationalCourierFees") ? "false" : "true")">国际快递费(￥)</th>
                        <th data-options="field:'OtherFees',width:100,align:'center'@(str2_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("OtherFees") ? "false" : "true")">其他费用(￥)</th>
                        <!--11-->
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <th data-options="field:'CompanyManagementRate',width:100,align:'center'@(str_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CompanyManagementRate") ? "false" : "true")">公司综合管理费率(%)</th>
                            <th data-options="field:'CompanyManagementAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("CompanyManagementAmount") ? "false" : "true")">公司综合管理费(￥)</th>
                            <th data-options="field:'AllAmount_CompanyManagement',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("AllAmount_CompanyManagement") ? "false" : "true")">合计我司成本(￥)</th>
                        }
                        <!--12-->
                        <th data-options="field:'RefundRate',width:100,align:'center'@(str_Number),hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("RefundRate") ? "false" : "true")">退税率(%)</th>
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <th data-options="field:'RefundAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("RefundAmount") ? "false" : "true")">退税金额(￥)</th>
                            <th data-options="field:'GrossProfitAmount',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("GrossProfitAmount") ? "false" : "true")">毛利(￥)</th>
                            <th data-options="field:'GrossProfitPercent',width:100,align:'center',hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("GrossProfitPercent") ? "false" : "true")">毛利率(%)</th>
                        }
                        <th data-options="field:'Comment',width:100,align:'center',editor:{type:'validatebox'},hidden:@(ViewBag.ColumnsVisible == null ? "false" : ((List<string>)ViewBag.ColumnsVisible).Contains("Comment") ? "false" : "true")">备注</th>

                        <th data-options="field:'ParentID',hidden:true"></th>
                        <th data-options="field:'RootID',hidden:true"></th>
                    </tr>
                </thead>

                <tbody data-bind="foreach: Order().list_FinanceProduct">
                    <tr>
                        <!--隐藏列-->
                        <td data-bind="text:ID"></td>
                        <td data-bind="text:OrderProductID"></td>
                        <td data-bind="text:CurrencySign"></td>
                        <td data-bind="text:ProductID"></td>
                        <td data-bind="text:Image"></td>
                        <td data-bind="text:IsMaintain"></td>

                        <td data-bind="text:FactoryAbbreviation"></td>
                        <td data-bind="text:PurchaseNumber"></td>
                        <td data-bind="text:PurchaseDateFormatter"></td>
                        <td data-bind="text:DateStartFormatter"></td>
                        <td data-bind="text:No"></td>
                        <!--1-->
                        <td data-bind="text:ShippingDateFormatter"></td>
                        <td data-bind="text:FactoryDateFormatter"></td>
                        <td data-bind="text:SeasonName"></td>
                        <td data-bind="text:Name"></td>
                        <td data-bind="text:Qty"></td>
                        <td data-bind="text:PriceFactory"></td>
                        <td data-bind="text:AllAmount"></td>
                        <!--2-->
                        <td data-bind="text:SettlementPeriod"></td>
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <td data-bind="text:InvoicedAmount"></td>
                        }
                        <td data-bind="text:PaymentDateFormatter"></td>
                        <td data-bind="text:PaymentAmount"></td>
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <td data-bind="text:CertifiedInvoiceDateFormatter"></td>
                        }
                        <!--3-->
                        <td data-bind="text:POPrice"></td>
                        <td data-bind="text:POAmount"></td>
                        <td data-bind="text:CommissionPercent"></td>
                        <td data-bind="text:CommissionAmount"></td>
                        <td data-bind="text:FOBUSDAmount"></td>
                        <td data-bind="text:USDExchangeRate"></td>
                        <td data-bind="text:FOBRMBAmount"></td>
                        <!--4-->
                        <td data-bind="text:ClearanceDateFormatter"></td>
                        <td data-bind="text:ClearanceAmount"></td>
                        <td data-bind="text:BankFees"></td>
                        <!--5-->
                        <td data-bind="text:InvoiceNo"></td>
                        <td data-bind="text:CustomsNumber"></td>
                        <td data-bind="text:CustomsAmount"></td>
                        <td data-bind="text:HSCode"></td>
                        <td data-bind="text:HSCodeName"></td>
                        <!--6-->
                        <td data-bind="text:PreRecordedStatus"></td>
                        <td data-bind="text:DocumentIndexUpLoadDate"></td>
                        <td data-bind="text:VolumeCUFT"></td>
                        <!--7-->
                        <td data-bind="text:AllOutContractAmount"></td>
                        <td data-bind="text:InspectionAuditFee_ForFactory"></td>
                        <td data-bind="text:InspectionSamplingFee_ForFactory"></td>
                        <td data-bind="text:InspectionVerificationFee_ForFactory"></td>
                        <td data-bind="text:InspectionDetectFee_ForFactory"></td>
                        <td data-bind="text:RegisterFees"></td>
                        <!--8-->
                        <td data-bind="text:OtherExpensesDeduction"></td>
                        <td data-bind="text:AllAmount_Factory"></td>
                        <td data-bind="text:FactoryFees"></td>
                        <td data-bind="text:PacksDetectFees"></td>
                        <!--9-->
                        <td data-bind="text:InspectionAuditFee"></td>
                        <td data-bind="text:InspectionSamplingFee"></td>
                        <td data-bind="text:InspectionVerificationFee"></td>
                        <td data-bind="text:InspectionDetectFee"></td>
                        <!--10-->
                        <td data-bind="text:PortCharges"></td>
                        <td data-bind="text:InternationalCourierFees"></td>
                        <td data-bind="text:OtherFees"></td>
                        <!--11-->
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <td data-bind="text:CompanyManagementRate"></td>
                            <td data-bind="text:CompanyManagementAmount"></td>
                            <td data-bind="text:AllAmount_CompanyManagement"></td>
                        }
                        <!--12-->
                        <td data-bind="text:RefundRate"></td>
                        @if (ViewBag.IsFinancialOfficer || ViewBag.IsBusinessOfficer)//只有财务主管和业务总监可以查看
                        {
                            <td data-bind="text:RefundAmount"></td>
                            <td data-bind="text:GrossProfitAmount"></td>
                            <td data-bind="text:GrossProfitPercent"></td>
                        }
                        <td data-bind="text:Comment"></td>

                        <td data-bind="text:ParentID"></td>
                        <td data-bind="text:RootID"></td>

                    </tr>
                </tbody>
            </table>

        </div>
    </div>

    <div class="popBtns">
        @switch (Model.PageType)
        {
            case PageTypeEnum.Add:
            case PageTypeEnum.Edit:
                <button type="button" class="btn btn-primary" data-bind="click: $root.save.bind($data, @((int)FinanceStatusEnum.OutLine))">保存为草稿</button>
                <button type="button" class="btn btn-danger" data-bind="click: $root.save.bind($data, @((int)FinanceStatusEnum.HadMaintenance))">保存为已维护</button>
                <button type="button" class="btn btn-default" onclick="OA.CloseMe()">取消</button>
                break;
            case PageTypeEnum.Details:
                <button type="button" class="btn btn-default" onclick="OA.CloseMe()">关闭</button>
                break;
            default:
                break;

        }
    </div>
}

<script src="@Url.Content("~/Content/Knockout/knockout-3.3.0.js")"></script>
<script src="@Url.Content("~/Content/Moment.js-v2.6.0/moment.min.js")"></script>
<script src="@Url.Content("~/Content/Knockout/knockout.mapping-latest.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.easyui.datagrid-groupview.js")"></script>

@section scripts{
    <script>
        $(function () {
            $("#frmEdit").attr("disabled", "disabled");

            $("#MyPopGrid").datagrid({
                checkOnSelect:true,
                onBeforeEdit:onBeforeEdit,
                onAfterEdit:onAfterEdit,
                onCancelEdit:onCancelEdit,
                onLoadSuccess:onLoadSuccess,
                onClickCell: @(Model.PageType == PageTypeEnum.Details ? "emptyFunc" : "onClickCell"),
                showFooter: false,
                onBeginEdit:onBeginEdit,
                onHeaderContextMenu:onHeaderContextMenu,
            });

            //每次加载
            var rows = $('#MyPopGrid').datagrid("getRows");
            if (rows && rows.length > 0) {
                for (var i = 0; i < rows.length; i++) {
                    CalculateRow(rows[i]);
                    updateActionsInfo(i);
                }
            }

        });

        function onHeaderContextMenu(e, field){
            e.preventDefault();
            jav.initGridColumnVisibilityMenus("MyPopGrid", @(ERP.WebNew.Service.CurrentUserServices.Me.UserID), @((int)ERP.Models.CustomEnums.DatagridCustomColumnVisibilityModules.FinanceManagement_ProductList), e.pageX, e.pageY, @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.ColumnsVisible))));
        }

        function myformatter(date){
            var y = date.getFullYear();
            var m = date.getMonth()+1;
            var d = date.getDate();
            return y+'-'+(m<10?('0'+m):m)+'-'+(d<10?('0'+d):d);
        }

        function myparser(s){
            if (!s) return new Date();
            var ss = (s.split('-'));
            var y = parseInt(ss[0],10);
            var m = parseInt(ss[1],10);
            var d = parseInt(ss[2],10);
            if (!isNaN(y) && !isNaN(m) && !isNaN(d)){
                return new Date(y,m-1,d);
            } else {
                return new Date();
            }
        }
        
        function formatPriceWithCurrency(value,row,index){
            if (value == "" || value == null) {
                return null;
            }
            return row.CurrencySign + value;
        }

        function formatPreRecordedStatus(value,row,index){

            var temp = @((int)PreRecordedStatusEnum.Yes);
            if (value==0) {
                return "&nbsp;";
            }
            else if (value==temp) {
                return "是";
            }
            else {
                return "否";
            }
        }

        function onBeginEdit(index,row){
            $(".datagrid-editable-input,.textbox-text,.validatebox-text").on("keypress",function(e){
                if(e.keyCode == 13){
                    acceptInfo(row);
                }
            });
        }

        function KOModel() {
            var self = this;

            self.Finance_StatusID = ko.observable();

            self.OrderID = ko.observable();
            self.OrderOrigin = ko.observable();
            self.OrderDateStart = ko.observable();
            self.OrderDateEnd = ko.observable();
            self.CustomerDate = ko.observable();

            self.IsThirdVerification = ko.observable();
            self.IsThirdAudits = ko.observable();
            self.IsThirdTest = ko.observable();

            self.CustomerID = ko.observable();
            self.PortID = ko.observable();
            self.DestinationPortID = ko.observable();
            self.POID = ko.observable();
            self.EHIPO = ko.observable();

            self.CheckSuggest = ko.observable();

            self.ShippingType = ko.observable();
            self.CabinetRemark = ko.observable();

            self.OrderRate = ko.observable();
            self.OrderRate_En = ko.observable();
            self.OrderAmount = ko.observable();

            self.ST_CREATEUSER = ko.observable("@(Model.ST_CREATEUSER)");
            self.ApproverIndex = ko.observable("@(Model.ApproverIndex)");

            self.QuotID = ko.observable();
            self.CurrencyExchange = ko.observable();
            self.Additional = ko.observable();

            self.list_FinanceProduct = ko.observableArray();

        }

        function KOViewModel() {
            var self = this;

            self.Order = ko.observableArray();
            self.Order(new KOModel());

            self.Order().list_FinanceProduct(@(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.list_FinanceProduct != null ? Model.list_FinanceProduct : null))));

            var checkSubmit = false;//防止重复提交
            self.save = function (Finance_StatusID) {
                if (editIndex != undefined) {
                    $.messager.confirm("提示", "发现您有正在编辑状态的产品，是否保存？", function(r){
                        if(r){
                            endEditingInfo();
                        }
                    });
                    return false;
                }

                var OrderID = $("#OrderID").val();

                self.Order().OrderID(OrderID);
                self.Order().Finance_StatusID(Finance_StatusID);

                $("#bntSave").removeAttr("disabled");

                var rows = $('#MyPopGrid').datagrid("getRows");
                if (rows && rows.length > 0) {
                    self.Order().list_FinanceProduct(rows);
                }
                else {
                    self.Order().list_FinanceProduct(null);
                    $.messager.alert("提示", "产品信息不能为空！");
                    return;
                }

                if (checkSubmit) {
                    $.messager.alert("提示", "请勿重复提交！");
                    return;
                }
                checkSubmit = true;
                loading();

                $.ajax({
                    type: 'post',
                    contentType: 'application/json',
                    url: "@Url.Content("~/Finance_ProductFitting/Edit/" + Model.OrderID)",
                    data: ko.toJSON(self.Order())
                }).done(function (data) {
                    checkSubmit = false;
                    completeLoading();
                    if (!data.IsSuccess) {
                        $.messager.alert("提示",data.Msg);
                    }
                    else {
                        parentGridReload();
                        OA.CloseMe(true);
                    }
                    $("#bntSave").removeAttr("disabled");
                });

            };

        };
        var viewModel = new KOViewModel()
        ko.applyBindings(viewModel);

        function getRowIndex(target) {
            var tr = $(target).closest('tr.datagrid-row');
            return parseInt(tr.attr('datagrid-row-index'));
        }

        var editIndex = undefined;
        function onBeforeEdit(index, row) {
            row.editing = true;
            updateActionsInfo(index);
        }

        function onAfterEdit(index, row) {
            CalculateRow(row);
            row.editing = false;
            updateActionsInfo(index);
        }
        function onCancelEdit(index, row) {
            row.editing = false;
            updateActionsInfo(index);
        }
        function endEditingInfo() {
            //var isView = ((bool)ViewData["IsView"] ? 1 : 0);
            //if(isView === 1){
            //    return false;
            //}
            if (editIndex == undefined) { return true }
            if ($('#MyPopGrid').datagrid('validateRow', editIndex)) {
                $('#MyPopGrid').datagrid('endEdit', editIndex);
                editIndex = undefined;
                return true;
            } else {
                return false;
            }
        }
        function editInfo(target) {
            acceptInfo(target);
            $('#MyPopGrid').datagrid('beginEdit', getRowIndex(target));
        }
        function appendInfo() {
            if (endEditingInfo()) {
                $('#MyPopGrid').datagrid('appendRow', { ID: -1 });
                editIndex = $('#MyPopGrid').datagrid('getRows').length - 1;
                $('#MyPopGrid').datagrid('selectRow', editIndex)
                        .datagrid('beginEdit', editIndex);
            }
        }
        function removeInfo(target) {
            rejectInfo();
            $.messager.confirm('Confirm', '确定要删除吗?', function (r) {
                if (r) {
                    $('#MyPopGrid').datagrid('deleteRow', getRowIndex(target));
                }
            });
        }
        function acceptInfo(target) {
            editIndex = getRowIndex(target);

            if (endEditingInfo()) {
                $('#MyPopGrid').datagrid('acceptChanges');
            }
        }
        function rejectInfo() {
            $('#MyPopGrid').datagrid('rejectChanges');
            editIndex = undefined;
        }
        function updateActionsInfo(index) {
            $('#MyPopGrid').datagrid('refreshRow', index);
            //jav.initGridCellTooltips(["OrderID"]);
            InitPopover();

        }

        function productNoFormatter(val, row, index) {
            if (row.ProductID == -1) {
                return "";
            }
            return jav.GetProductHtml(row.Image, '@(Url.Content("~/ProductFitting/Edit/"))' + row.RootID + "?Type=Detail", row.No);
        }

        function onClickCell(index, field){
            if (editIndex != index){
                if (endEditingInfo()){
                    $('#MyPopGrid').datagrid('selectRow', index).datagrid('beginEdit', index);
                    var ed = $('#MyPopGrid').datagrid('getEditor', {index:index,field:field});
                    if (ed){
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    setTimeout(function(){
                        $('#MyPopGrid').datagrid('selectRow', editIndex);
                    },0);
                }
            }
            RemovePopover();
        }
        function emptyFunc() {

        }
        function onLoadSuccess() {
            //jav.initGridCellTooltips(["OrderID"]);
            InitPopover();

            var rows = $('#MyPopGrid').datagrid('getRows');
            var TotalCBM = 0;
            var Ctns=0;
            var Qty=0;
            var SumSalePrice=0;
            var SumNetPrice=0;
            var CurrencySign= "";
            var SumPriceFactoryFormatter=0;

            for (var i = 0; i < rows.length; i++) {
                var thisRow = rows[i];
                if (parseFloat(thisRow.TotalCBM) == thisRow.TotalCBM) {
                    TotalCBM += parseFloat(thisRow.TotalCBM);
                }
                Ctns += parseFloat(thisRow.Ctns);
                Qty += parseInt(thisRow.Qty);
                SumSalePrice += parseFloat(thisRow.SumSalePrice);
                SumNetPrice += parseFloat(thisRow.SumNetPrice);

                CurrencySign = thisRow.CurrencySign;
                SumPriceFactoryFormatter += thisRow.Qty * thisRow.PriceFactory;
            }

            //统计信息
            $('#MyPopGrid').datagrid('reloadFooter',
                [
                    {
                        ProductID:-1,
                        TotalCBM: NumberToRound(TotalCBM,2),
                        Ctns: NumberToRound(Ctns,2),
                        Qty: Qty,
                        SumSalePrice: NumberToRound(SumSalePrice,2),
                        SumNetPrice: NumberToRound(SumNetPrice,2),
                        SumPriceFactoryFormatter:CurrencySign+ NumberToRound(SumPriceFactoryFormatter,2),
                    },
                ]
            );

        }

        //计算行
        function CalculateRow(row) {
            if (row.USDExchangeRate != "") {
                row.FOBRMBAmount = row.FOBUSDAmount * row.USDExchangeRate;
            }else {
                row.FOBRMBAmount = "0";
            }

            row.AllAmount_Factory = GetValue(row.AllOutContractAmount) + GetValue(row.InspectionAuditFee_ForFactory) + GetValue(row.InspectionDetectFee_ForFactory) + GetValue(row.InspectionSamplingFee_ForFactory) + GetValue(row.InspectionVerificationFee_ForFactory) + GetValue(row.RegisterFees) + GetValue(row.OtherExpensesDeduction);

            row.CompanyManagementAmount = row.POAmount * row.USDExchangeRate * row.CompanyManagementRate;

            row.AllAmount_CompanyManagement = GetValue(row.PacksDetectFees) + GetValue(row.InspectionAuditFee) + GetValue(row.InspectionDetectFee) + GetValue(row.InspectionSamplingFee) + GetValue(row.InspectionVerificationFee) + GetValue(row.PortCharges) + GetValue(row.InternationalCourierFees) + GetValue(row.OtherFees) + GetValue(row.CompanyManagementAmount);


            var temp=@(ERP.Tools.Keys.USD_Sign);
            if (row.CurrencySign == temp)
            {
                row.RefundAmount = row.AllAmount * row.USDExchangeRate / 1.17 * row.RefundRate/100;
                row.GrossProfitAmount = row.FOBRMBAmount - row.AllAmount_CompanyManagement + row.RefundAmount - row.AllAmount * row.USDExchangeRate;
            }
            else
            {
                row.RefundAmount = row.AllAmount / 1.17 * row.RefundRate/100;
                row.GrossProfitAmount = row.FOBRMBAmount - row.AllAmount_CompanyManagement + row.RefundAmount - row.AllAmount;
            }
            if (row.FOBRMBAmount==0) {
                row.GrossProfitPercent = 0;
            }else {
                row.GrossProfitPercent = row.GrossProfitAmount / (row.FOBRMBAmount - row.AllAmount_CompanyManagement + row.RefundAmount);
            }

            row.RefundAmount = NumberToRound(row.RefundAmount,2);
            row.GrossProfitAmount = NumberToRound(row.GrossProfitAmount,2);
            row.GrossProfitPercent = NumberToRound(row.GrossProfitPercent,2);
            row.AllOutContractAmount = NumberToRound(row.AllOutContractAmount,2);
            row.AllAmount_Factory = NumberToRound(row.AllAmount_Factory,2);
            row.CompanyManagementAmount = NumberToRound(row.CompanyManagementAmount,2);
            row.AllAmount_CompanyManagement = NumberToRound(row.AllAmount_CompanyManagement,2);
            if (row.IsMaintain == "false") {
                row.CompanyManagementRate = 10;
            }
        }

        function GetValue(number) {
            if (number == "") {
                number = 0;
            }
            if (number == null) {
                number = 0;
            }
            return parseFloat(number);
        }

        //格式化金额为123,456.78
        function formatMoney(number, places, thousand, decimal) {
            number = number || 0;
            places = !isNaN(places = Math.abs(places)) ? places : 2;
            thousand = thousand || ",";
            decimal = decimal || ".";
            var negative = number < 0 ? "-" : "",
                i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + "",
                j = (j = i.length) > 3 ? j % 3 : 0;
            return negative + (j ? i.substr(0, j) + thousand : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : "");
        }

        //格式化为货币位数
        function formatPrice(price, v) {
            if (price == null) {
                return "";
            }
            return price == 0 ? "" : parseFloat(price).toFixed(v);
        }
    </script>
}